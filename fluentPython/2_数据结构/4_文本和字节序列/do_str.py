"""
人类使用文本，计算机使用字节序列

1. 什么是一个字符串？一个字符序列（一个字符的最佳定义是Unicode字符，在golang中是rune，是4个字节，而不是byte）

2. 什么叫编码？字符的标识（码位），把码位转换成字节序列的过程叫做编码（编码的目的是为了节约存储空间，暂时不考虑字符意义，一个中文字符可能被拆成多个字节）

Unicode字符串(str) ---> 二进制序列(bytes: 字节序列)  | 最小单位不同：字符 vs 字节

Unicode字符: python中是2个字节
ASCII编码: 1个字节
UTF-8: 1个字节到6个字节（汉字一般是两个字节）

"""


# 编码
s = 'abcd' # str
b = s.encode() # bytes

# 从字符串创建二进制序列类型
cafe = bytes('cafe', encoding='utf-8')

# 解码
c = b.decode('') # str


print(cafe)
print(type(cafe)) # bytes


# 如何找出字节序列的编码规则？
# 必须有人来告诉你，否则就是一段无意义的字节序列
# 当然，每种编码的数据都会有一定的特征，可以猜出来是哪种编码，有个Chardet工具可以干这件事情


# 如何处理文本？（三明治）
# 尽早把字节序列转换成字符串，业务处理只处理字符串，尽量晚把字符串编码为字接序列


# 内存中如何存储str？
# python解释器会检查每个字符，挑选合适的内存布局，所以无法确定字符串如何在内存中存储
# 我们只需要搞清楚一个字符和一个字节是不同的